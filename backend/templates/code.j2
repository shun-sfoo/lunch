pub async fn create_{{struct_name}}_table(db: &DbConn) -> Result<ExecResult, DbErr> {
    let stmt = sea_query::Table::create()
        .table(crate::entity::{{struct_name}}::Entity)
        .if_not_exists()
        {% for col in cols %}
        .col(
            ColumnDef::new(crate::entity::post::Column::Id)
                .integer()
                .not_null()
                .auto_increment()
                .primary_key(),
        )
        .col(
            ColumnDef::new(crate::entity::post::Column::Title)
                .string()
                .not_null(),
        )
        .col(
            ColumnDef::new(crate::entity::post::Column::Text)
                .string()
                .not_null(),
        )
        .to_owned();

    create_table(db, &stmt).await
}

